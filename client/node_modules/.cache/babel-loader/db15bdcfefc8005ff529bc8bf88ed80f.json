{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\To-Do Project\\\\client\\\\src\\\\components\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport TaskItem from \"./TaskItem\"; // List is a common Component for displaying list of 'To-Do' and 'Finished' Tasks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const [list, setList] = useState([]); // Save endpoint address in 'api_url'\n\n  const api_url = props.status === \"unfinished\" ? \"http://127.0.0.1:8081/getunfinishedtasks\" : props.status === \"finished\" ? \"http://127.0.0.1:8081/getfinishedtasks\" : \"\"; // Fetch list from database\n\n  fetch(api_url).then(response => response.json()).then(setList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      border: '1px solid black',\n      margin: '2px'\n    },\n    children: list.map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n      id: item.task_id,\n      description: item.description,\n      status: props.status\n    }, item.task_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"5B5creADs30R66wN/2t9GZl+br4=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","TaskItem","List","props","list","setList","api_url","status","fetch","then","response","json","display","flexDirection","flexWrap","border","margin","map","item","task_id","description"],"sources":["C:/Users/hp/Desktop/To-Do Project/client/src/components/List.js"],"sourcesContent":["import React from \"react\";\r\nimport {useEffect, useState} from 'react';\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n// List is a common Component for displaying list of 'To-Do' and 'Finished' Tasks\r\nfunction List(props) {\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    // Save endpoint address in 'api_url'\r\n    const api_url = props.status === \"unfinished\" ? \"http://127.0.0.1:8081/getunfinishedtasks\" : \r\n                    props.status === \"finished\"   ? \"http://127.0.0.1:8081/getfinishedtasks\"   : \"\"\r\n\r\n\r\n    // Fetch list from database\r\n    fetch(api_url)\r\n    .then(response => response.json())\r\n    .then(setList);\r\n\r\n    return (   \r\n        <div style={{display: 'flex', flexDirection: 'column', flexWrap: 'wrap', border: '1px solid black', margin: '2px'}}>\r\n           { list.map ( item => <TaskItem id={item.task_id} key={item.task_id} description={item.description} status={props.status}/> ) }\r\n         </div>\r\n       );\r\n    \r\n}\r\n\r\nexport default List;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAEjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAFiB,CAIjB;;EACA,MAAMM,OAAO,GAAGH,KAAK,CAACI,MAAN,KAAiB,YAAjB,GAAgC,0CAAhC,GACAJ,KAAK,CAACI,MAAN,KAAiB,UAAjB,GAAgC,wCAAhC,GAA6E,EAD7F,CALiB,CASjB;;EACAC,KAAK,CAACF,OAAD,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMJ,OAFN;EAIA,oBACI;IAAK,KAAK,EAAE;MAACO,OAAO,EAAE,MAAV;MAAkBC,aAAa,EAAE,QAAjC;MAA2CC,QAAQ,EAAE,MAArD;MAA6DC,MAAM,EAAE,iBAArE;MAAwFC,MAAM,EAAE;IAAhG,CAAZ;IAAA,UACKZ,IAAI,CAACa,GAAL,CAAWC,IAAI,iBAAI,QAAC,QAAD;MAAU,EAAE,EAAEA,IAAI,CAACC,OAAnB;MAA+C,WAAW,EAAED,IAAI,CAACE,WAAjE;MAA8E,MAAM,EAAEjB,KAAK,CAACI;IAA5F,GAAiCW,IAAI,CAACC,OAAtC;MAAA;MAAA;MAAA;IAAA,QAAnB;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GApBQjB,I;;KAAAA,I;AAsBT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}